import java.util.Scanner;

import com.cor.graphx.main;
import com.cor.graphx.util.MotorbikeEventGenerator;
public class Main {

	public static void main(String[] args) {
		
		Scanner scanner = new Scanner(System.in);
		
		Long param = 0L;

		// Selecting number of events

		System.out.print("Select the number of events (max 30000):");
		String nEvents = scanner.nextLine();

		if (!nEvents.isEmpty() && nEvents.matches("[-+]?\\d*\\.?\\d+")) {
			try {
				param = Long.parseLong(nEvents);
				if(param > 30000L){
					System.out.println("Error. Test without 30000 events");
					param = 30000L;
				}
			} catch (NumberFormatException e) {
				param = 30000L;
			}
		} else {
			System.out.println("Error. Test without 30000 events");
			param = 30000L;
		}

		// Selecting delay

		System.out.print("Do you want to test with a delay of 1 second between events? (S/N)");
		String option = scanner.nextLine();
		MotorbikeEventGenerator generator = (MotorbikeEventGenerator) factory.getBean("eventGenerator");
		
		if (!option.isEmpty() && option.matches("[SNsn]")) {

			if (option.equalsIgnoreCase("S") ) {
				// Start Demo with delay	
				generator.startSendingMotorbikesReadingsDelay(param);
			} else {
				// Start Demo without delay
				generator.startSendingMotorbikesReadings(param);
			}

		} else {
			// Start Demo without delay
			System.out.println("Error. Test without delay");
			generator.startSendingMotorbikesReadings(param);
		}
		
		main.main(args);
	

	}

}
